; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppVers "1.3.1"
#define MyAppName "Seagull"
#define MyAppVerName "Seagull v1.3.1"
#define MyAppPublisher "HP OpenCall Software"
#define MyAppURL "http://gull.sourceforge.net/"
#define MyAppExeName "seagull.exe"
#define MyAppOutputDir "..\work-"
#define MyAppBuildDir "..\build-"

[Setup]
AppName={#MyAppName}
AppVerName={#MyAppVerName}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\Seagull
DefaultGroupName=Seagull
AllowNoIcons=false
LicenseFile=..\LICENSE.txt
InfoAfterFile=..\README.txt
OutputBaseFilename=seagull-{#MyAppVers}.win32-setup
Compression=lzma
SolidCompression=true
OutputDir={#MyAppOutputDir}{#MyAppVers}
VersionInfoVersion={#MyAppVers}
VersionInfoCompany=HP OpenCall Software
VersionInfoDescription=Seagull
ShowLanguageDialog=yes
AppVersion={#MyAppVerName}
AppReadmeFile=
AppCopyright=Copyright 2006 Hewlett-Packard Development Company, LP.
CreateUninstallRegKey=false

[Languages]
Name: english; MessagesFile: compiler:Default.isl

[Tasks]
;Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked
;Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked

[Types]

[Components]

[Dirs]
; Diameter Env
Name: {app}\diameter-env
Name: {app}\diameter-env\config
Name: {app}\diameter-env\logs
Name: {app}\diameter-env\run
Name: {app}\diameter-env\scenario

[Files]
; Main executable and lib files
Source: {#MyAppBuildDir}{#MyAppVers}\seagull.exe; DestDir: {app}; Flags: ignoreversion
Source: {#MyAppBuildDir}{#MyAppVers}\libtrans_ip.so; DestDir: {app}; Flags: ignoreversion
Source: {#MyAppBuildDir}{#MyAppVers}\libparser_xml.so; DestDir: {app}; Flags: ignoreversion
Source: {#MyAppBuildDir}{#MyAppVers}\csvextract.exe; DestDir: {app}; Flags: ignoreversion
Source: {#MyAppBuildDir}{#MyAppVers}\csvsplit.exe; DestDir: {app}; Flags: ignoreversion
Source: ..\packaging\cygwin\startterm.bat; DestDir: {app}; Flags: ignoreversion; AfterInstall: ReplaceInstDirInFile

; Cygwin Environement files
Source: ..\..\..\..\cygwin\usr\share\terminfo\c\cygwin; DestDir: C:\cygwin\usr\share\terminfo\c\; Flags: uninsneveruninstall onlyifdoesntexist
Source: C:\cygwin\bin\cygwin1.dll; DestDir: {app}
Source: C:\cygwin\bin\mount.exe; DestDir: {app}
Source: C:\cygwin\bin\umount.exe; DestDir: {app}

; Execution environement files

; Diameter Env
Source: ..\exe-env\diameter-env\config\conf.client.xml; DestDir: {app}\diameter-env\config\; Flags: ignoreversion
Source: ..\exe-env\diameter-env\config\conf.server.xml; DestDir: {app}\diameter-env\config\; Flags: ignoreversion
Source: ..\exe-env\diameter-env\config\base_cx.xml; DestDir: {app}\diameter-env\config\; Flags: ignoreversion
Source: ..\exe-env\diameter-env\config\base_draft08.xml; DestDir: {app}\diameter-env\config\; Flags: ignoreversion
Source: ..\exe-env\diameter-env\scenario\sar-saa.client.xml; DestDir: {app}\diameter-env\scenario\; Flags: ignoreversion
Source: ..\exe-env\diameter-env\scenario\sar-saa.server.xml; DestDir: {app}\diameter-env\scenario\; Flags: ignoreversion
Source: ..\packaging\cygwin\start_diameter_client.bat; DestDir: {app}\diameter-env\run\; DestName: start_client.bat; Flags: ignoreversion; AfterInstall: ReplaceInstDirInFile
Source: ..\packaging\cygwin\start_diameter_server.bat; DestDir: {app}\diameter-env\run\; DestName: start_server.bat; Flags: ignoreversion; AfterInstall: ReplaceInstDirInFile


; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: ..\LICENSE.txt; DestDir: {app}; Flags: ignoreversion
Source: ..\README.txt; DestDir: {app}; Flags: ignoreversion
Source: ..\INSTALL.txt; DestDir: {app}; Flags: ignoreversion
Source: ..\HISTORY.txt; DestDir: {app}; Flags: ignoreversion

[Icons]
Name: {group}\Start {#MyAppName} shell; Filename: {app}\startterm.bat; WorkingDir: {app}; Comment: Start {#MyAppName} terminal
Name: {group}\{cm:UninstallProgram,{#MyAppName}}; Filename: {uninstallexe}

; Diameter env
Name: {group}\Diameter\Start {#MyAppName} Diameter Client; Filename: {app}\diameter-env\run\start_client.bat; WorkingDir: {app}; Comment: Start {#MyAppName} Diameter Client terminal
Name: {group}\Diameter\Start {#MyAppName} Diameter Server; Filename: {app}\diameter-env\run\start_server.bat; WorkingDir: {app}; Comment: Start {#MyAppName} Diameter Server terminal
Name: {group}\Diameter\SAR-SAA Client Scenario; Filename: {app}\diameter-env\scenario\sar-saa.client.xml; WorkingDir: {app}; Comment: SAR/SAA Diameter Client scenario file
Name: {group}\Diameter\SAR-SAA Server Scenario; Filename: {app}\diameter-env\scenario\sar-saa.server.xml; WorkingDir: {app}; Comment: SAR/SAA Diameter Server scenario file
Name: {group}\Diameter\Base Cx Dictionary; Filename: {app}\diameter-env\config\base_cx.xml; WorkingDir: {app}; Comment: Base Cx Diameter Dictionary file
Name: {group}\Diameter\Client Configuration; Filename: {app}\diameter-env\config\conf.client.xml; WorkingDir: {app}; Comment: Client Diameter Configuration file
Name: {group}\Diameter\Server Configuration; Filename: {app}\diameter-env\config\conf.server.xml; WorkingDir: {app}; Comment: Server Diameter Configuration file

[Run]

[_ISTool]
LogFile={#MyAppOutputDir}{#MyAppVers}
LogFileAppend=false
[Code]
///////////////////////////////////////////////////////////////////////////////
// Find given text in given file, and replace
// complete textline with given text.
// Created: March 27, 2002 by S.T.I.Bracke
// Revised: May 22, 2002 by S.T.I.Bracke
function ReplaceLine(strFilename, strFind, strNewLine: String): Boolean;
var
  iLineCounter : Integer;
  a_strTextfile : TArrayOfString;

begin
  { Load textfile into string array }
  LoadStringsFromFile(strFilename, a_strTextfile);

  { Search trough all textlines for given text }
  // old line
  // for iLineCounter := 1 to High(a_strTextfile) do
  // new line corrected by Nikolaus Moll
  for iLineCounter := 0 to GetArrayLength(a_strTextfile)-1 do
    begin
      { Overwrite textline when text searched for is part of it }
      if (Pos(strFind, a_strTextfile[iLineCounter]) > 0) then
        a_strTextfile[iLineCounter] := strNewLine;
    end;

  { Save string array to textfile (overwrite, no append!) }
  SaveStringsToFile(strFilename, a_strTextfile, False);

  Result := True;

end;

procedure ReplaceInstDirInFile();
begin
  ReplaceLine( ExpandConstant (CurrentFileName), 'set RUN_DIR=REPLACETHIS', 'SET RUN_DIR=' + ExpandConstant('{app}') );
end;
