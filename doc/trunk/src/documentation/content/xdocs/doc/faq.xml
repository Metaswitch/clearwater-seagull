<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE faqs PUBLIC "-//APACHE//DTD FAQ V2.0//EN" "http://forrest.apache.org/dtd/faq-v20.dtd">

<faqs>
  <title>Frequently Asked Questions</title>
  <!-- Last FAQ # is 006 -->

  <faqsection id="usage">
    <title>Seagull Usage</title>
    <faq id="faq001">
      <question>
        What does the channel represent in the config file?
      </question>
      <answer>
        <p>
          The channel that you configure in the config file is then used in the scenario. If you configured "channel-1" in your config file, you will use "<![CDATA[<send channel="channel-1">]]>" in your scenario.
        </p>
      </answer>
    </faq>
    <faq id="faq002">
      <question>
        How do we define random holding times?
      </question>
      <answer>
        <p>
          This is not possible. You will have to run several Seagull in parallel for that. I will see what we can do for a future release.
        </p>
      </answer>
    </faq>
    <faq id="faq003">
      <question>
        How does Seagull work - in 3 lines?
      </question>
      <answer>
          	<ul>
            <li>A traffic scenario (sequence of send/receive/wait-ms) is defined.</li>
            <li>The traffic scenario is multiplied, following the "call-rate" instruction. 100 calls/second call rate will start 100 parallel scenarios for each second.</li>
            <li>Other kind of scenarios (init, default, abort) can also be defined. Those scenarios are not "multiplied" following the call rate. See doc for more details on those.</li>
            </ul>
      </answer>
    </faq>
    <faq id="faq004">
      <question>
       What happens if a call is stuck?
      </question>
      <answer>
          	<p>By default, the call will be stuck forever. You need to
            activate the call-timeout to instruct Seagull to close "hanged" calls.
            If a call is active beyond the call-timeout-ms value, the call will 
            time out and Seagull will close the call by using the <![CDATA[<abort>]]> section
            of the scenario if it exists.</p>
      </answer>
    </faq>
    <faq id="faq006">
      <question>
       I occasionally get "Flow control not implemented" messages. What does that mean?
      </question>
      <answer>
          	<p>  The message you see is because Seagull got an "EAGAIN" error 
            from the TCP protocol stack when trying to send his message. 
            This EAGAIN error occurs when Seagull cannot send anymore data 
            (like when TCP buffer full): the TCP stack asks the application
            (Seagull) to try again later. But this mechanism (which can be called "flow control")
            is not implemented in Seagull.</p>
            <p>Looking at the possible causes, this might be because the remote 
            application (to which Seagull talks to) doesn't read data 
            quick enough, which causes TCP stack queues on which Seagull is relying 
            to be overloaded.</p>
            <p>Also, you must be aware that when you change the call rate, 
            the max-send and max-receive as well as maybe max-simultaneous-calls parameters 
            must be changed accordingly (see 
            <a href="http://gull.sourceforge.net/doc/core.html#ref_traffic_param">http://gull.sourceforge.net/doc/core.html#ref_traffic_param</a> 
            for values)</p>
      </answer>
    </faq>
    
  </faqsection>
  <faqsection id="misc">
    <title>Miscenalleous questions</title>
    <faq id="faq005">
      <question>
       Is Seagull stable?
      </question>
      <answer>
          	<p>Yes, Seagull runs and runs. Judge for yourself:</p>
            <img alt="Seagull 1,000,000 calls" src="images/seagull_1000000.jpg"/>
      </answer>
    </faq>
    <!-- More faqs or parts here -->
  </faqsection>
  <!-- More faqs or parts here -->
</faqs>


